parameters:
  name: env
  type: string
  default: 'local'



steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "20.x"
      displayName: "Install Node.js"

  - task: CacheBeta@1
    inputs:
      key: npm | $(Agent.OS) | tests/package-lock.json
      path: /home/vsts/.npm
      restoreKeys: npm | $(Agent.OS) | tests/package-lock.json
    displayName: Cache NPM packages
  - task: CacheBeta@1
    inputs:
      key: cypress | $(Agent.OS) | tests/package-lock.json
      path: /home/vsts/.cache/Cypress
      restoreKeys: cypress | $(Agent.OS) | tests/package-lock.json
    displayName: Cache Cypress binary

  - script: |
      export ENVIRONMENT=${{ parameters.env }}
      echo "Running environment: $ENVIRONMENT"
      cp .azure/configs/cypress.$ENVIRONMENT.json tests/cypress.env.json
      echo "Copied => .azure/configs/cypress.$ENVIRONMENT.json -> tests/cypress.env.json"
      cd tests
      npm ci
    displayName: "Install NPM dependencies"

  - script: |
      cd tests
      npm i npm-run-all -g
      npm i -S serve
    displayName: "Install npm-run-all"

  - script: |
      cd tests
      npm run cy:verify
    displayName: "Cypress verify"

  # The next command starts the server and runs Cypress end-to-end tests against it.
  # The test artifacts (screenshots & test output) will be uploaded to Cypress Cloud
  # To record on Cypress Cloud we need to set CYPRESS_RECORD_KEY environment variable
  - script: |
      cd tests
      npm run test:ci:record
    displayName: "Run Cypress tests"